matrix:
  include:
    - os: windows
      language: sh
      python: '3.8'
      before_install:
        - choco install python3
        - ln -s "/c/Python38/python.exe" "/c/Python38/python3.exe"
        - export PATH="/c/Python38:/c/Python38/Scripts/:$PATH"

    - os: osx
      language: generic
      env: TRAVIS_PYTHON_VERSION="3.7"
      osx_image: xcode11.3
      python: '3.7'

    - os: osx
      language: generic
      env: TRAVIS_PYTHON_VERSION="3.7"
      osx_image: xcode10.1
      python: '3.7'

    - os: linux
      language: python
      python: "pypy3"
      env: PYTHON=/home/travis/virtualenv/pypy3.6-7.1.1/bin
      addons:
        apt:
          packages:
            - libpcap-dev
            - autogen

    - os: linux
      language: python
      python: '3.6'
      env: PYTHON=/home/travis/virtualenv/python3.6.7/bin
      addons:
        apt:
          packages:
            - libpcap-dev
            - autogen

    - os: linux
      language: python
      python: '3.7'
      env: PYTHON=/home/travis/virtualenv/python3.7.1/bin
      addons:
        apt:
          packages:
            - libpcap-dev
            - autogen

    - os: linux
      language: python
      python: '3.8'
      env: PYTHON=/home/travis/virtualenv/python3.8.0/bin
      addons:
        apt:
          packages:
            - libpcap-dev
            - autogen

  allow_failures:
    - os: windows


install:
  - python3 -m pip install --upgrade pip
  - python3 -m pip install wheel
  - python3 -m pip install twine
  - python3 -m pip install setuptools
  - python3 -m pip install -r requirements.txt
  - python3 -m pip install codecov
  - python3 setup.py bdist_wheel
  - ls dist/
  
script:
  - coverage run tests.py

after_success:
  - codecov

deploy:
    provider: pypi
    distributions: bdist_wheel
    file_glob: true
    file:
      - dist/*.whl
    user: aouinizied
    skip_cleanup: true
    skip_existing: true
    password:
      secure: W+ApjHVG6W1RgXwbXgC+Ucg/+ReoZDvUubQk4238iu78phjJuIpum/EMXa0pw6/eVMzuT1RSr8rGLZS81NyqLySiDQ13zXso+cjEcAq33DthAbOgIb3/q5M1HNHSzMZgF3E509QWumMtmcR4dO6ddxRYWWEk2ElLEUcYiLi2THmSDJi2w0V3Mh7CAHv24XCuyWKAXyVKbJ3ZxM5tq7HetkOT+8IAc9KxNQOp8sbIWRulpgz4LXwiLFqQBQqQ7caoubDaqzLdzIK7Yp6qtnnTBQRrVNAjNO1JDGMZduIqxnye3DyLJ/j4qQuafMaRRFyd+wZHTw3BD/AUfZ2s/aT2Yajp5mq1JJU1qd35qq+OdkiDLYYTtSPrgbr2K9639lGwP75/apGmyInasBuExdktzFHU74uE4s8aMK2xmlCNP71kJpQtp7dsPH0TdkA1eEyJWvx45K9QS2+acNnQMOIv/vtPjina7thBfTyetFVtY7/A3/Bt9PhP79qijVtgZMW4zI+8mBJSE8Gsw9QJ2RR6ztvgDqBuIanNrZA4B8Vii+6tUUm6FY0Ak3A+olxs/75hQygdbNiSsvijEsa4pSNvsJZnvh8aQhkpCm7l2Xn2eXrdJj9o6a+OjdBuracFU279mV3xqsdf22PBjnx/+klPpJFnlOlsxwZ8T5Ok7IdDtqU=
    on:
      tags: true
