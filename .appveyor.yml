version: version='3.0.4'.{build}
environment:
  TWINE_USERNAME:
    secure: kuL7IEgQ60jLJ5TXKY1C9A==
  TWINE_PASSWORD:
    secure: 7TPnKbfi538yO/KwAj5wfg==
  matrix:
    - PYTHON: "C:\\Python37"
      PYTHON_VERSION: "3.7.x"
      PYTHON_ARCH: "32"
      COMPILER: mingw
      MINGW_DIR: c:\msys64\mingw32

install:
  # Prepend Python to the PATH of this build
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"
  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""
  # Upgrade to the latest version of pip to avoid it displaying warnings
  # about it being out of date.
  - "python -m pip install --upgrade pip"
  - "python -m pip install -r requirements.txt"
  - "python -m pip install --upgrade pip"
  - "python -m pip install twine wheel codecov"

before_build:
    - set Path=%MINGW_DIR%\bin;%Path%

build_script:
  - set Path=%MINGW_DIR%\bin;c:\msys64\usr\bin;
  - "python setup.py bdist_wheel"

test_script:
  - "coverage run tests.py"

artifacts:
  - path: 'dist\*.whl'
    name: pypiartifacts

on_success:
  - "codecov"
  - ps: >-
      if($env:APPVEYOR_REPO_TAG -eq 'true') {
        Write-Output ("Deploying " + $env:APPVEYOR_REPO_TAG_NAME + " to PyPI...")
        twine upload --skip-existing dist/*.whl
      } else {
        Write-Output "Not deploying as this is not a tagged commit"
      }
